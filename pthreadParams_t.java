/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class pthreadParams_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected pthreadParams_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(pthreadParams_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ocrJNI.delete_pthreadParams_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setSrc(SWIGTYPE_p_std__vectorT_cv__Mat_p_t value) {
    ocrJNI.pthreadParams_t_src_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_cv__Mat_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_cv__Mat_p_t getSrc() {
    long cPtr = ocrJNI.pthreadParams_t_src_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_cv__Mat_p_t(cPtr, false);
  }

  public void setBlacklist(String value) {
    ocrJNI.pthreadParams_t_blacklist_set(swigCPtr, this, value);
  }

  public String getBlacklist() {
    return ocrJNI.pthreadParams_t_blacklist_get(swigCPtr, this);
  }

  public void setWhitelist(String value) {
    ocrJNI.pthreadParams_t_whitelist_set(swigCPtr, this, value);
  }

  public String getWhitelist() {
    return ocrJNI.pthreadParams_t_whitelist_get(swigCPtr, this);
  }

  public void setOCR(SWIGTYPE_p_tesseract__TessBaseAPI value) {
    ocrJNI.pthreadParams_t_OCR_set(swigCPtr, this, SWIGTYPE_p_tesseract__TessBaseAPI.getCPtr(value));
  }

  public SWIGTYPE_p_tesseract__TessBaseAPI getOCR() {
    long cPtr = ocrJNI.pthreadParams_t_OCR_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_tesseract__TessBaseAPI(cPtr, false);
  }

  public void setLang(String value) {
    ocrJNI.pthreadParams_t_lang_set(swigCPtr, this, value);
  }

  public String getLang() {
    return ocrJNI.pthreadParams_t_lang_get(swigCPtr, this);
  }

  public void setConf(SWIGTYPE_p_std__vectorT_float_t value) {
    ocrJNI.pthreadParams_t_conf_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_float_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_float_t getConf() {
    long cPtr = ocrJNI.pthreadParams_t_conf_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_float_t(cPtr, false);
  }

  public void setInterp(SWIGTYPE_p_std__vectorT_std__string_t value) {
    ocrJNI.pthreadParams_t_interp_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__string_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_std__string_t getInterp() {
    long cPtr = ocrJNI.pthreadParams_t_interp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_std__string_t(cPtr, false);
  }

  public pthreadParams_t() {
    this(ocrJNI.new_pthreadParams_t(), true);
  }

}
